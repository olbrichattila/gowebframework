// add SMTP server --ok // update to be able to send attachments.?
// add local queue, internal "cron" with goroutine --ok
// create a default Storage interface, which could be reused for session, cache, log and other classes, inject the relevant one when we build the app
// add custom commands
// add DI across function calls / this is non singleton DI
// add create:event command
// add Route resource controller, (create crud)
// add someting like PHP artisan, creating boilerlate controllers, resource contorllers middlewares automatically
// separate mandatory framework DI and custom DI config file
// fix SQL Builder component does not work for Postgres, Need to be able to change field delimeter from ` to ", And parameter binding is not ? but $1, $2
// fix SQL builder with postgres does not support last insert ID
// fix SQL builder with firebird SQL does not support last insert ID
// add .env  
// add different DB types, MySql, Postgres, Firebird, (sqlite exists)
// add redis, memcache, other session manager
// add Logger (multiple channels) (1 channel. file is done)
// add more customizable routes
// add cofing containing folrers, what view should auto render like /templates so it is easier to swap the slice[... templatefiles] to replace with a simple template file. 
// add Caching / html template and generic, use file, redis, db memcache drivers
// add Validator, maybe combine with request, and possibility to validate in middleware and redirect, + store in session the fields validated to reuse
// add custom validator class and an artisan command to generate
// cleanup html templates remove repetition of headers with template partials, auto load of partials from folder.
consider adding 'lastValidationError' or validation error (if changes) automatically to view render
add File Storage (S3, and other) 
add .conf.yml (include in config to fetch)
add migrator as internal command, so we can get rid of .env.migrator
add Job middleware
add Job rate Limiter
add Config, Env config and config cache
add DB transactions
add Environment dependent service DI providers
concurrency locker // for DB expecially with SQLIte connection
add context to DI, global context
add global channels
add Event listeners... 
    -local /added
    -other chanels, todo
add session, cache, log cleanups, expiration
add session bound to http only
add @crsf
add PDF generator from view
add Testing with auto bootstrapping the app
add Auto cdn, convert to webp, resize crop by file name suffix
add Expand notification, next to emails to various channels, SMS, Push notification
add Localisation (language translation)
add Event broadcastion (see Laravel)
add Add Policy Gate Authorization like  allow you to manage user permissions in an organized manner.
add Event listeners internally, direct or queue, implement Observer (internal is done)
add Rate Limiter middleware
add Models with relations to other Models
add Mail queue automatically, so don't need to do your own queue for this.
add Paginator
add Test fakers
add switch on off maintenance Mode
add Encryption, decryption
add HTTPS server (if possible)
add Cookie module, encrypted cookies
add DB seeder
add Multi file uploading
add simple support to add ReactJs
add More view default func like auto route generator, whatever
add built in csv manager
add built in file downloader
add JWT 

Todo full code cleanup, add tests
